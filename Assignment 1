1. Write a script to extract all the numerics from Alphanumeric String.

create function alpha2numeric(@str varchar(30))
returns varchar(30) as 
begin 
declare @res varchar(30)='';
declare @chind int =1;
declare @char char;
while @chind<=len(@str)
begin 
set @char=SUBSTRING(@str,@chind,1);
if ascii(@char) between 47 and 58
begin 
set @res=@res+@char;
end
set @chind=@chind+1;
end
return @res;
end;

print dbo.alpha2numeric('123ptnshf3') ;


2. Write a script to calculate age based on the Input DOB

create function age(@dob date) returns int as
begin 
declare @pdate date = getdate();
declare @day int = day(@dob),@mon int=month(@dob),@year int =year(@dob);
declare @pday int = day(@pdate),@pmon int = month(@pdate),@pyear int = year(@pdate);
if @mon>@pmon
return @pyear-@year;
else if @mon<@pmon
return @pyear-@year+1;
else if @day>@pday
return @pyear-@year;

return @pyear-@year+1;
end
go
select dbo.age('2002-11-06') as AGE;

3. Create a column in a table and that should throw an error when we do SELECT * or SELECT of that column. If we select other columns then we should see results
create table computed_column
(empid int not null,
empname varchar(50) not null,
dob date not null,
age as (datediff(yy,dob,getdate())+1/0),
constraint [PK_Employee] primary key clustered(empid asc));
select * from computed_column;

4. Display Calendar Table based on the input year. If I give the year 2017 then populate data for 2017 only

Date e.g.  1/1/2017 

DayofYear 1 â€“ 365/366 (Note 1)

Week 1-52/53

DayofWeek 1-7

Month 1-12

DayofMonth 1-30/31 (Note 2)

Note 1: DayofYear varies depending on the number of days in the given year.

Note 2: DayofMonth varies depending on number of days in the given month
create table calender (
date_ date,
day_ as (datepart(dayofyear,date_)),
week_ as (datepart(week,date_)),
dayofweek_ as (datepart(weekday,date_)),
month_ as (datepart(month,date_)),
dayofmonth_ as (datepart(day,date_)),
);

declare @date int =2023;
declare @1day date = concat(@date,'-01-01');

while year(@1day)=@date
begin
insert into calender values (@1day);
set @1day=dateadd(d,1,@1day);
end;

select * from calender;

5)Display Emp and Manager Hierarchies based on the input till the topmost hierarchy. (Input would be empid)

Output: Empid, empname, managername, heirarchylevel
create table heirarchy5(
id int ,
name varchar(30),
salary numeric,
mid numeric);

insert into heirarchy5 values (1,'abc',3000,3),(2,'def',2500,1),(3,'ghi',4000,4),(4,'jkl',5000,null),(5,'mno',2000,2);

select e1.name as Employee ,e2.name as Manager from heirarchy5 e1
join heirarchy5 e2
on e1.mid=e2.id
